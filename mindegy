using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace D_Hondt_beadando
{
    class Szamol : Partok
    {
        List<int> matrixLista;

        public Szamol(int partszam, int mandatum, List<int> szavazatszam, List<string> partnev) : base(partnev, szavazatszam)
        {
            this.matrixLista = new List<int>();
        }

        public void matrixFel()
        {
            int j = 1;
            for (int i = 1; i <= mandatum*partszam; i++)
            {
                matrixLista.Add((int)Math.Round((double)szavazatszam[i % partszam] / j, 0));
                if (i % partszam == 0)
                {
                    j++;
                }
            }
        }
        public List<int> sorbaRendez()
        {
            var eredmeny = matrixLista.Select((ertek, index) => new { Ertek = ertek, Index = index })
                                  .OrderByDescending(a => a.Ertek)
                                  .Take(10)
                                  .Select(x=>x.Index)
                                  .ToList();
            return eredmeny;
        }
        public List<int> szavazatSorbaIndex()
        {
            var szavazatSorba = szavazatszam.Select((ertek, index) => new { Ertek = ertek, Index = index }).OrderByDescending(a => a.Ertek).Select(x=>x.Index).ToList();
            return szavazatSorba;
        }
        public List<int> szavazatSorbaErtek()
        {
            var szavazatSorba = szavazatszam.Select((ertek, index) => new { Ertek = ertek, Index = index }).OrderByDescending(a => a.Ertek).Select(x => x.Ertek).ToList();
            return szavazatSorba;
        }
        public List<int> partSzavazat()
        {
            List<int> kapottMandatum = new List<int>() { 0, 0, 0, 0, 0, 0 };
            for(int i = 0; i < mandatum; i++)
            {
                kapottMandatum[sorbaRendez()[i] % 6]++;
            }
            return kapottMandatum;
        }
        public List<double> osszesSzavazat()
        {
            int ossz = szavazatszam.Sum();
            List<double> szazalek = new List<double>();
            for(int i = 0; i < szavazatszam.Count; i++)
            {
                szazalek.Add(Math.Round((double)szavazatszam[i] / ossz * 100,1));
            }
            return szazalek;
        }
        public List<double> mandatumPartonBelul()
        {
            List<int> kell = partSzavazat().Where(a => a !=0).ToList();
            int j = 0;
            int ossz = 0;
            while(j < kell.Count)
            {
                ossz += szavazatSorbaErtek()[j]++;
            }
            List<double> k = new List<double>();
            for (int i = 0; i < kell.Count; i++)
            {
                k.Add(Math.Round((double)szavazatSorbaErtek()[i] / ossz*100,1));
            }
            return k;
        }
        public List<double> mandatumArany()
        {
            List<double> mandatumSzazalek = new List<double>();
            for(int i = 0; i < partszam; i++)
            {
                mandatumSzazalek.Add(Math.Round((double)partSzavazat()[i] / mandatum * 100, 1));
            }
            return mandatumSzazalek;
        }
        
    }
    class Szimulal
    {

    }
    class Megjelenit
    {

    }
    class General
    {

    }
    public class Partok
    {
        public static int partszam;
        public static int mandatum;
        public List<string> partnev;
        public List<int> szavazatszam;
        public Partok(string sor)
        {
            partnev = new List<string>();
            szavazatszam = new List<int>();
            List<string> sorSplit = sor.Split(' ').ToList();
            partnev.Add(sorSplit[0]);
            szavazatszam.Add(int.Parse(sorSplit[1]));
            partszam++;
        }

        public Partok(List<string> partnev, List<int> szavazatszam)
        {
            this.partnev = partnev;
            this.szavazatszam = szavazatszam;

        }
    }
    class Program
    {
    static void Main(string[] args)
        {
            
            Partok.mandatum = Convert.ToInt32(File.ReadAllLines("input.txt").Take(1).First());
            List<Partok> adatok = Array.ConvertAll(File.ReadAllLines("input.txt").Skip(1).ToArray(), (sor) => new Partok(sor)).ToList();
            Console.WriteLine(Partok.mandatum);

            Console.ReadKey();

        }
    }
}
